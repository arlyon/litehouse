/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/pmh0DXSxRC9
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'
import { Gabarito } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

gabarito({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button";
import type { SVGProps } from "react";
import { AddButton } from "./add-button";
import { ManifestButton } from "./manifest-button";
import { ManifestEditor } from "./manifest-editor";
import { ThemeToggle } from "./theme-toggle";

export function RegistryPage(props: {
  totalDownloads: number;
  pluginCount: number;
  users: number;
  packages: {
    title: string;
    description: string;
    version: string;
    downloads?: number;
  }[];
}) {
  return (
    <div key="1" className="container mx-auto px-4 md:px-6 py-8">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-2xl font-bold flex items-center">
          <PackageIcon className="mr-2 h-6 w-6" />
          Litehouse Plugins
        </h1>
        <div className="relative w-full max-w-md flex items-center">
          <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <SearchIcon className="h-5 w-5 text-primary" />
          </div>
          <input
            className="block w-full rounded-full bg-gray-100 dark:bg-muted/20 pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-transparent dark:focus:ring-gray-50"
            placeholder="Search packages..."
            type="text"
          />
          <ManifestEditor />
          <ThemeToggle />
        </div>
      </div>
      <div className="flex justify-between mb-6">
        <div>
          <p className="text-muted-foreground">Total Downloads</p>
          <p className="font-bold">{props.totalDownloads}</p>
        </div>
        <div>
          <p className="text-muted-foreground">Plugin Count</p>
          <p className="font-bold">{props.pluginCount}</p>
        </div>
        <div>
          <p className="text-muted-foreground">Users</p>
          <p className="font-bold">{props.users}</p>
        </div>
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {props.packages?.map((p) => (
          <Package key={p.title} {...p} />
        ))}
      </div>
    </div>
  );
}

function Package(props: {
  title: string;
  description: string;
  version: string;
  downloads?: number;
}) {
  const formatter = new Intl.NumberFormat("en-US");
  return (
    <div className="bg-background border border-muted hover:border-orange-300 has-[[data-selected=true]]:!border-green-500 dark:hover:border-orange-600 rounded overflow-hidden">
      <div className="p-4">
        <h3 className="text-lg font-semibold mb-2">{props.title}</h3>
        <p className="text-muted-foreground mb-4">{props.description}</p>
        <div className="flex items-center justify-between">
          <div className="text-sm text-gray-500 dark:text-gray-400">
            {props.version ? (
              <span className="font-medium">v{props.version}</span>
            ) : null}
            {props.downloads !== undefined && props.version ? (
              <span className="mx-2">â€¢</span>
            ) : null}
            {props.downloads !== undefined ? (
              <span>{formatter.format(props.downloads)} downloads</span>
            ) : null}
          </div>
          <AddButton name={props.title} version={props.version} />
        </div>
      </div>
    </div>
  );
}

function PackageIcon(props: SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <title>Package</title>
      <path d="m7.5 4.27 9 5.15" />
      <path d="M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" />
      <path d="m3.3 7 8.7 5 8.7-5" />
      <path d="M12 22V12" />
    </svg>
  );
}

function SearchIcon(props: SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <title>Search</title>
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  );
}
